#include <stdio.h>

int relational(char ch[])
{
    char temp[6][3] = {"==", "!=", "<", ">", "<=", ">="};
    for (int j = 0; j < 6; j++)
    {
        int i = 0;
        while (ch[i] != '\0' && temp[j][i] != '\0')
        {
            if (ch[i] != temp[j][i])
            break;
            i++;
        }
        if (ch[i] == '\0' && temp[j][i] == '\0')
            return 1;
    }
    return 0;
}

int logical(char ch[])
{
    char temp[3][3] = {"&&", "||", "!"};
    for (int j = 0; j < 3; j++)
    {
        int i = 0;
        while (ch[i] != '\0' && temp[j][i] != '\0')
        {
            if (ch[i] != temp[j][i])
            break;
            i++;
        }
        if (ch[i] == '\0' && temp[j][i] == '\0') return 1;
    }
    return 0;
}

int arithmetic(char ch[])
{
    char temp[5][2] = {"+", "-", "*", "/", "%"};
    for (int j = 0; j < 5; j++)
    {
        int i = 0;
        while (ch[i] != '\0' && temp[j][i] != '\0')
        {
            if (ch[i] != temp[j][i])
            break;
            i++;
        }
        if (ch[i] == '\0' && temp[j][i] == '\0') return 1;
    }
    return 0;
}

int assignment(char ch[])
{
    return (ch[0] == '=' && ch[1] == '\0');
}

int main()
{
    char ch[800];
    scanf("%[^$]", ch);

    char ch2[50][50];
    int row = 0, col = 0;
    for (int i = 0; ch[i] != '\0'; i++)
    {
        if (ch[i] == ' ' || ch[i] == '\n' || ch[i] == '\t')
        {
            if (col > 0)
            {
                ch2[row][col] = '\0';
                row++;
                col = 0;
            }
        }
        else
        {
            ch2[row][col++] = ch[i];
        }
    }
    if (col > 0)
    {
        ch2[row][col] = '\0';
        row++;
    }

    for (int i = 0; i < row; i++)
    {
        if (arithmetic(ch2[i]))
        {
            printf("%s : Arithmetic Operator\n", ch2[i]);
        }
        else if (relational(ch2[i]))
        {
            printf("%s : Relational Operator\n", ch2[i]);
        }
        else if (logical(ch2[i]))
        {
            printf("%s : Logical Operator\n", ch2[i]);
        }
        else if (assignment(ch2[i]))
        {
            printf("%s : Assignment Operator\n", ch2[i]);
        }
        else
        {
            printf("%s : Invalid Operator\n", ch2[i]);
        }
    }

    return 0;
    
    
}



